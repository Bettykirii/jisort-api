---
swagger: "2.0"
info:
  description: 'This is a sample server Login server.  Sample api documentation for
    system login.The API login is the simplest method of integration for most applications.
    It will allow the user to provide their username and password.  '
  version: 1.0.0
  title: JISORT API
  termsOfService: https://my.jisort.com/app/
  contact:
    email: beatrice@jisort.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: my.jisort.com
tags:
- name: API
  description: Everything about your API's
  externalDocs:
    description: Find out more
    url: https://my.jisort.com/app
- name: user
  description: Operations about user
  externalDocs:
    description: Find out more about our store
    url: http://my.jisort.com
schemes:
- https
- http
paths:
  /registration/login/:
    post:
      tags:
      - user
      summary: This is an area where users of the system are logged in.
      description: |2+
         The login session expires after 36000  <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr><br> Parameters <span style="display:inline-block; width: 25%;"></span>      Description<hr> Username  <span style="display:inline-block; width: 30%;"></span> set to the username used to login.<br>  Password <span style="display:inline-block; width: 31%;"></span>            set to the password is used for login.<br> Grant type <span style="display:inline-block; width: 30%;"></span>         set to the value password.<br> Client_id  <span style="display:inline-block; width: 32%;"></span>        set to the client identifier.<br> Client secret   <span style="display:inline-block; width: 30%;"></span>    set to the client secret

      operationId: updatePetWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: username
        in: formData
        description: Field to add username
        required: true
        type: string
      - name: password
        in: formData
        description: Field to add password
        required: true
        type: string
      - name: grant_type
        in: formData
        description: With the value password
        required: false
        type: string
      - name: client_id
        in: formData
        description: with the the client’s ID
        required: false
        type: string
      - name: client_secret
        in: formData
        description: with the client’s secret
        required: false
        type: string
  /messenger/outbox/:
    post:
      tags:
      - messenger
      summary: Sends a Message
      description: |+
        The OAuth access token expires after a  , after which, you will need to generate another access token. On a production app, use a base64 library of the programming language you are using to build your app to get the Basic Auth string that you will then use to invoke our OAuth API to get an access token.<br> <h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr>.<br> With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header. Our APIs currently only supports application/json content type.<br> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json content type is supported.<br> <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr>.<br>
        Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>  Recipient <span style="display:inline-block; width: 30%;"></span> Set to the recipients contact<br>    Message <span style="display:inline-block; width: 31%;"></span>Set to the message being sent<br><span style="display:block; height: 5%;"></span> <p style="color:#FF0831;">Disclaimer!  Always generate delivery reports before 48 hours are over since the lifetime for a delivery report is 48 hours  </p>

      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: recipient
        in: formData
        description: with the receivers contact
        required: true
        type: string
      - name: Authorization
        in: header
        description: with the authorization token access
        required: true
        type: string
      - name: message
        in: formData
        description: with the users message
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Message not delivered
        404:
          description: User not found
  /messenger/outbox/?message_status:
    get:
      tags:
      - messenger
      summary: Gets a list of messages
      description: "The OAuth access token expires after an , after which, you will\
        \ need to generate another access token. On a production app, use a base64\
        \ library of the programming language you are using to build your app to get\
        \ the Basic Auth string that you will then use to invoke our OAuth API to\
        \ get an access token\n<h3 style=\"font-size:120%;\">HTTP Header Parameters</h3>\
        \ <hr>.<br> With an OAuth 2.0 Access Token, an application can now invoke\
        \ our APIs by including the access token in the HTTP header. Our API currently\
        \  supports application/json content type.The token is generated after you\
        \ send a message.<br><h3 style=\"font-size:120%;\"> HTTP header Parameters</h3>\
        \ <hr> Parameters <span style=\"display:inline-block; width: 30%;\"></span>\
        \  Description <hr>  Authorization <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Set to  Only bearer < access token>.<br> "
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
  /products/applied_loans/:
    get:
      tags:
      - loan
      summary: Lists  loans applied
      description: 'This lists the loans that have been applied  <br> With an OAuth
        2.0 Access Token, an application can now invoke our API by including the access
        token in the HTTP header. Our API currently  supports application/json content
        type.<br>  <h3 style="font-size:120%;"> HTTP header Parameters</h3> <hr> Parameters
        <span style="display:inline-block; width: 30%;"></span>  Description <hr>  Authorization
        <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer
        < access token>.<br>'
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: 'The authorization that allows for authentication . '
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        400:
          description: Invalid username/password supplied
    post:
      tags:
      - product
      summary: Apply loan
      description: " This is a simple API for  loan application. To authorize your\
        \ API call to the OAuth API, you will need a Basic Auth over HTTPS authorization\
        \ token. <h3 style=\"font-size:120%;\"> HTTP header Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \   Authorization <span style=\"display:inline-block; width: 25%;\"></span>\
        \ Set to  Only bearer < access token>.<br> Content-Type <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Only application/json content type is supported.<br>\
        \ <h3 style=\"font-size:120%;\"> HTTP POST Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \  Member <span style=\"display:inline-block; width: 25%;\"></span> Select\
        \ member who is borrowing a loan <br>\nLoan reference number <span style=\"\
        display:inline-block; width: 10%;\"></span> The number that uniquely identifies\
        \ a loan <br>\nLoan type <span style=\"display:inline-block; width: 24%;\"\
        ></span> Select the type of loan that a member is borrowing. <br>\nLoan purpose\
        \ <span style=\"display:inline-block; width: 20%;\"></span> Fill in why the\
        \ member is borrowing a loan. <br>\nAmount <span style=\"display:inline-block;\
        \ width: 26%;\"></span> Enter the amount being borrowed. <br>\nNo of repayments\
        \ <span style=\"display:inline-block; width: 16%;\"></span> Add the number\
        \ of repayments for the loan being borrowed. <br>\nDate of loan application\
        \ <span style=\"display:inline-block; width: 10%;\"></span> Add the date the\
        \ loan was applied. <br>\nGrace period <span style=\"display:inline-block;\
        \ width: 20%;\"></span> An additional time given to a member to pay off their\
        \ loan. <br>\nCharge deductions <span style=\"display:inline-block; width:\
        \ 13%;\"></span> Select  whether you want that particular loan to attract\
        \ charges. <br> \nDate of first repayment <span style=\"display:inline-block;\
        \ width: 10%;\"></span> Select the date for the first repayment. <br> \nDays\
        \ before first repayment <span style=\"display:inline-block; width: 7%;\"\
        ></span> Add the days before the first repayment. <br>\nInterest rate<span\
        \ style=\"display:inline-block; width: 25%;\"></span>Add the interest rate\
        \ charges. <br>  \nLoan top-up <span style=\"display:inline-block; width:\
        \ 20%;\"></span>Select  list depending whether you want to a loan top up or\
        \ not.<br>   "
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: 'The authorization that allows for authentication . '
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/loan'
      responses:
        default:
          description: successful operation
  /products/repayment_schedule/?loan:
    get:
      tags:
      - product
      summary: loan accounts
      description: |-
        This lists the loan accounts  <br>
        With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header. Our API   supports application/json content type.<br>  <h3 style="font-size:120%;"> HTTP header Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>  Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br>
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: 'The authorization that allows for access. '
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        400:
          description: Invalid username/password supplied
  /products/loans/:
    post:
      tags:
      - product
      summary: Register loan product
      description: 'This registers the loan product.<br> <h3 style="font-size:120%;">HTTP
        Header Parameters</h3> <hr>.<br> With an OAuth 2.0 Access Token, an application
        can now invoke our API by including the access token in the HTTP header. Our
        APIs currently only supports application/json content type.<br> Parameters
        <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization
        <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer
        < access token>.<br> Content-Type <span style="display:inline-block; width:
        25%;"></span>  Only application/json '
      operationId: loginUser
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The user name for login
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: successful operation
  /products/loan_disbursement/:
    post:
      tags:
      - product
      summary: loan disbursement
      description: "This registers the loan product.<br> <h3 style=\"font-size:120%;\"\
        >HTTP Header Parameters</h3> <hr>.<br> With an OAuth 2.0 Access Token, an\
        \ application can now invoke our API by including the access token in the\
        \ HTTP header. Our APIs currently only supports application/json content type.<br>\
        \ Parameters <span style=\"display:inline-block; width: 30%;\"></span>  Description\
        \ <hr>   Authorization <span style=\"display:inline-block; width: 25%;\"></span>\
        \ Set to  Only bearer < access token>.<br> Content-Type <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Only application/json <h3 style=\"font-size:120%;\"\
        > HTTP POST Parameters</h3> <hr> Parameters <span style=\"display:inline-block;\
        \ width: 30%;\"></span>  Description <hr>  Member <span style=\"display:inline-block;\
        \ width: 30%;\"></span> A member whose loan is being disbursed .<br>\nDisbursement_amount\
        \  <span style=\"display:inline-block; width: 15%;\"></span> The amount being\
        \ disbursed .<br>\nLoan  <span style=\"display:inline-block; width: 30%;\"\
        ></span> loan that is being disbursed. <br>\nBank <span style=\"display:inline-block;\
        \ width: 30%;\"></span> The bank that money will be disbursed to. <br>\nDisbursement_date\
        \ <span style=\"display:inline-block; width: 18%;\"></span> date when the\
        \ money will be dibursed. <br>\nCurrency <span style=\"display:inline-block;\
        \ width: 25%;\"></span> Select currency in which the loan will be disbursed.\
        \ <br>\nPayment_type  <span style=\"display:inline-block; width: 20%;\"></span>\
        \ Add the payment mode in which the loan will be disbursed. <br>\nReceipt_no\
        \  <span style=\"display:inline-block; width: 25%;\"></span>the receipt number\
        \ of the loan. <br>\nDeduct charges from disbursement amount  <span style=\"\
        display:inline-block; width: 10%;\"></span> This will attract charges from\
        \ disbursed amount. <br> \nCharges  <span style=\"display:inline-block; width:\
        \ 30%;\"></span> the charges to be deducted from the. <br>  "
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - name: member
        in: formData
        description: A member whose loan is being disbursed
        required: true
        type: string
      - name: disbursement_amount
        in: formData
        description: The amount being disbursed
        required: true
        type: string
      - name: loan
        in: formData
        description: loan that is being disbursed
        required: false
        type: string
      - name: bank
        in: formData
        description: the bank that money will be disbursed to
        required: true
        type: string
      - name: disbursement_date
        in: formData
        description: date when the money will be dibursed
        required: true
        type: string
      - name: currency
        in: formData
        description: the currency used
        required: true
        type: string
      - name: payment_type
        in: formData
        description: the payment mode for this transaction
        required: true
        type: string
      - name: receipt_no
        in: formData
        description: the receipt number of the loan
        required: true
        type: string
      - name: deduct_charges_from_disbursement_amount
        in: formData
        description: This will attract charges from disbursed amount
        required: true
        type: string
      - name: charges
        in: formData
        description: the charges to be deducted from the
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
        400:
          description: Invalid username/password supplied
  /products/applied_loans/{id}/:
    patch:
      tags:
      - product
      summary: Approve loans
      description: 'This API is used to make approval call for loans.<br> .<h3 style="font-size:120%;">HTTP
        Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block;
        width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block;
        width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type
        <span style="display:inline-block; width: 25%;"></span>  Only application/json
        <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span
        style="display:inline-block; width: 30%;"></span>  Description <hr>  Id <span
        style="display:inline-block; width: 30%;"></span> The Id of the loan .<br> '
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The user name for login
        required: true
        type: string
      - name: id
        in: path
        description: The user name for login
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /products/repayment_schedule/:
    post:
      tags:
      - product
      summary: process loan
      description: 'This API is used to process loans<br><h3 style="font-size:120%;">HTTP
        Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block;
        width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block;
        width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type
        <span style="display:inline-block; width: 25%;"></span>  Only application/json
        <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span
        style="display:inline-block; width: 30%;"></span>  Description <hr>  Loan
        <span style="display:inline-block; width: 30%;"></span>Fill the loan being
        processed.<br>'
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The user name for login
        required: true
        type: string
      - name: loan
        in: formData
        description: Field to add username
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /products/applied_loans/{id}/':
    patch:
      tags:
      - product
      summary: Reverse loan
      description: 'Reverse loan API makes reversal calls.<h3 style="font-size:120%;">HTTP
        Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block;
        width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block;
        width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type
        <span style="display:inline-block; width: 25%;"></span>  Only application/json
        <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span
        style="display:inline-block; width: 30%;"></span>  Description <hr>  Id <span
        style="display:inline-block; width: 30%;"></span>Fill the loan Id to be reversed.<br>'
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: ""
        required: true
        type: string
      - name: id
        in: path
        description: ""
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /products/loan_guarantors/:
    post:
      tags:
      - product
      summary: loan guarantors
      description: "Loan guarantors API adds a guarantor.<br> With an OAuth 2.0 Access\
        \ Token, an application can now invoke our APIs by including the access token\
        \ in the HTTP header. It also supports application/json as content type  <h3\
        \ style=\"font-size:120%;\">HTTP Header Parameters</h3> <hr><br>Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \   Authorization <span style=\"display:inline-block; width: 25%;\"></span>\
        \ Set to  Only bearer < access token>.<br> Content-Type <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Only application/json <h3 style=\"font-size:120%;\"\
        > HTTP POST Parameters</h3> <hr> Parameters <span style=\"display:inline-block;\
        \ width: 30%;\"></span>  Description <hr> <br> Member type <span style=\"\
        display:inline-block; width: 30%;\"></span>A guarantor can be a member, non-member\
        \ or Group<br>\nMember <span style=\"display:inline-block; width: 35%;\"></span>The\
        \ name of the member to guarantee the loan<br>\ncollateral_or_savings <span\
        \ style=\"display:inline-block; width: 20%;\"></span>Set to whether the guarantor\
        \ is using their savings or collateral<br>\nsavings_amount <span style=\"\
        display:inline-block; width: 25%;\"></span>Add the amount that this guarantor\
        \ has in terms of savings<br>\nloan <span style=\"display:inline-block; width:\
        \ 35%;\"></span>Set which loan this individual will guarantee<br>\nmember_id\
        \ <span style=\"display:inline-block; width: 30%;\"></span>Set to the member\
        \ id <br> "
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: with the authorization token access
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema: {}
      responses:
        default:
          description: successful operation
  /registration/collateral_registration/:
    post:
      tags:
      - product
      summary: Register collateral
      description: "Collateral registration registers collateral.<br> With an OAuth\
        \ 2.0 Access Token, an application can now invoke our APIs by including the\
        \ access token in the HTTP header. It also supports application/json as content\
        \ type  <h3 style=\"font-size:120%;\">HTTP Header Parameters</h3> <hr><br>Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \   Authorization <span style=\"display:inline-block; width: 25%;\"></span>\
        \ Set to  Only bearer < access token>.<br> Content-Type <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Only application/json <h3 style=\"font-size:120%;\"\
        > HTTP POST Parameters</h3> <hr> Parameters <span style=\"display:inline-block;\
        \ width: 30%;\"></span>  Description <hr> <br> Member_type <span style=\"\
        display:inline-block; width: 20%;\"></span>select whether the collateral is\
        \ for a member on non-member<br>\nMember <span style=\"display:inline-block;\
        \ width: 24%;\"></span>Select member  whose collateral is to be registered<br>\n\
        Description  <span style=\"display:inline-block; width: 20%;\"></span>  Add\
        \ descriptive note for the collateral <br>\nCollateral_id_no <span style=\"\
        display:inline-block; width: 15%;\"></span>  Add a unique identifier for the\
        \ collateral being registered<br>\nValue <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Add value of the collateral.<br>\nStatus  <span style=\"\
        display:inline-block; width: 25%;\"></span>Select the status of the collateral\
        \ <br>\nCollateral_type <span style=\"display:inline-block; width: 15%;\"\
        ></span>  Add collateral type. Is it movable or immovable<br>\nComment <span\
        \ style=\"display:inline-block; width: 25%;\"></span>Add relevant comment<br> "
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Collateral'
      responses:
        default:
          description: successful operation
  /product/loan_charge/:
    post:
      tags:
      - product
      summary: Creates loan charges
      description: |-
        This is a section showing the charges incurred by the loanee during the process of acquiring a loan.<br> With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header. It also supports application/json as content type  <h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br> Name <span style="display:inline-block; width: 30%;"></span>Set the name of the charge <br>
        Charge time type <span style="display:inline-block; width: 20%;"></span>Set to the charge time type<br>
        Charge calculation <span style="display:inline-block; width: 19%;"></span> set to the type of calculation <br>
        Formula <span style="display:inline-block; width: 30%;"></span>  Set to the formula used <br>
        Calculation amount from <span style="display:inline-block; width: 15%;"></span>set to the least amount.<br>
        Calculation amount from  <span style="display:inline-block; width: 15%;"></span>Set to the most amount <br>
        Amount <span style="display:inline-block; width: 30%;"></span>  Set to the amount being charged <br>
        Gl_account <span style="display:inline-block; width: 30%;"></span>To which GL account does the charge go to<br>
        Use as  <span style="display:inline-block; width: 30%;"></span>Select the status of the collateral <br>
        Status <span style="display:inline-block; width: 30%;"></span>  Set to the status from the list<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Charges'
      responses:
        default:
          description: successful operation
  /products/formulas/:
    post:
      tags:
      - product
      summary: formulas
      description: |-
        The user can also add their own loan formula  on the formula menu. With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header. It also supports application/json as content type  <h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br> name <span style="display:inline-block; width: 25%;"></span>Set to the name of the formula<br>
        formula_array <span style="display:inline-block; width: 20%;"></span>Set to the formula array of the loan<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Formulas'
      responses:
        default:
          description: successful operation
  /registration/members/:
    post:
      tags:
      - Registration
      summary: Member registration
      description: |-
        This creates the member details.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        First name <span style="display:inline-block; width: 25%;"></span>Add member first name<br>
        Middle name <span style="display:inline-block; width: 25%;"></span>   Add member middle name <br>
        last name <span style="display:inline-block; width: 25%;"></span>    Add last name <br>
        Date of birth <span style="display:inline-block; width: 25%;"></span>  Add date of birth.<br>
        Id number  <span style="display:inline-block; width: 25%;"></span>  Add the id number of member<br>
        CRO <span style="display:inline-block; width: 30%;"></span>    Add CRO <br>
        Member number <span style="display:inline-block; width: 20%;"></span>Add member number <br>
        Country <span style="display:inline-block; width: 25%;"></span>Add the country <br>
        Registration date <span style="display:inline-block; width: 20%;"></span>    Add registration date<br>
        Status <span style="display:inline-block; width: 30%;"></span>Add the status of the member<br>
        Gender <span style="display:inline-block; width: 27%;"></span>  Add Gender <br>
        Mobile number <span style="display:inline-block; width: 20%;"></span>  Add mobile number<br>
        Member type <span style="display:inline-block; width: 20%;"></span>  Add the member type <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Registration'
      responses:
        default:
          description: successful operation
  /registration/member_bank/:
    post:
      tags:
      - Registration
      summary: Member bank details
      description: |-
        This creates the bank details for  the member.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br> Member <span style="display:inline-block; width: 25%;"></span>Add the member whose bank details are to be added <br>
        Bank <span style="display:inline-block; width: 25%;"></span>   Add member middle name <br>
        Branch <span style="display:inline-block; width: 25%;"></span>    Add last name <br>
        Branch name <span style="display:inline-block; width: 25%;"></span> Add the bank branch.<br>
        Account type  <span style="display:inline-block; width: 25%;"></span> It is either Adult or minor<br>
        Account number <span style="display:inline-block; width: 30%;"></span> Add the account number<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Bank'
      responses:
        default:
          description: successful operation
  /registration/next_of_kin/:
    post:
      tags:
      - Registration
      summary: Next of kin
      description: "This posts the details of a next of kinWith an OAuth 2.0 Access\
        \ Token, an application can now invoke our API by including the access token\
        \ in the HTTP header.<h3 style=\"font-size:120%;\">HTTP Header Parameters</h3>\
        \ <hr><br>Parameters <span style=\"display:inline-block; width: 30%;\"></span>\
        \  Description <hr>   Authorization <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Set to  Only bearer < access token>.<br> Content-Type <span\
        \ style=\"display:inline-block; width: 25%;\"></span>  Only application/json\
        \ <h3 style=\"font-size:120%;\"> HTTP POST Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \ <br>\nMember <span style=\"display:inline-block; width: 25%;\"></span>Add\
        \ the member whose next of kin is being registered <br>\nFirst name <span\
        \ style=\"display:inline-block; width: 25%;\"></span>   Add first name for\
        \ next kin<br>\nMiddle name <span style=\"display:inline-block; width: 25%;\"\
        ></span>  Add middle name for next of kin<br>\nLast name <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Add last name for next of kin<br>\nRelationship <span\
        \ style=\"display:inline-block; width: 25%;\"></span> Add how the member is\
        \ related to their next of kin<br>\nPercentage <span style=\"display:inline-block;\
        \ width: 30%;\"></span> Add the percentage which next of kin will receive<br>\
        \ \nDate of birth <span style=\"display:inline-block; width: 25%;\"></span>\
        \    Add date of birth for next of kin<br>\nID no <span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add the ID no<br>\nMobile No <span style=\"display:inline-block;\
        \ width: 30%;\"></span> Add  the mobile no<br> \nDescription <span style=\"\
        display:inline-block; width: 30%;\"></span>Add description for the next of\
        \ kin<br> "
      operationId: create Next of kin
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Next_of_kin'
      responses:
        default:
          description: successful operation
  /registration/member_group/:
    post:
      tags:
      - Registration
      summary: Member group registration
      description: |-
        This is an area for adding a member to a group.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br> Member <span style="display:inline-block; width: 25%;"></span>Add the member whose bank details are to be added <br>
        group_name <span style="display:inline-block; width: 25%;"></span>Add the member whose bank details are to be added <br>
        Is a member signatory <span style="display:inline-block; width: 25%;"></span>Add the member whose bank details are to be added <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Member_group'
      responses:
        default:
          description: successful operation
  /registration/member_accounts/:
    post:
      tags:
      - Registration
      summary: Member accounts
      description: "This is a section to create accounts for different members.With\
        \ an OAuth 2.0 Access Token, an application can now invoke our API by including\
        \ the access token in the HTTP header.<h3 style=\"font-size:120%;\">HTTP Header\
        \ Parameters</h3> <hr><br>Parameters <span style=\"display:inline-block; width:\
        \ 30%;\"></span>  Description <hr>   Authorization <span style=\"display:inline-block;\
        \ width: 25%;\"></span> Set to  Only bearer < access token>.<br> Content-Type\
        \ <span style=\"display:inline-block; width: 25%;\"></span>  Only application/json\
        \ <h3 style=\"font-size:120%;\"> HTTP POST Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \ <br>\nGroup <span style=\"display:inline-block; width: 25%;\"></span>Add\
        \ the group whose account is to be created <br>\nMember <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  member whose account is to be created<br>\nAccount\
        \ <span style=\"display:inline-block; width: 25%;\"></span> Add the account<br>\n\
        Account number <span style=\"display:inline-block; width: 25%;\"></span> Add\
        \ account number<br>\nAccount name <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Add how the member is related to their next of kin<br>\n\
        Charge registration fee <span style=\"display:inline-block; width: 30%;\"\
        ></span> Add yes or no if there is registration fee <br> \nOpening date <span\
        \ style=\"display:inline-block; width: 25%;\"></span> The date the account\
        \ was opened.<br>\nEnable account signatories <span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add if you want to enable signatories or not<br>"
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Member_accounts'
      responses:
        default:
          description: successful operation
  /registration/work_details/:
    post:
      tags:
      - Registration
      summary: Work details
      description: "This creates the work details for a member.With an OAuth 2.0 Access\
        \ Token, an application can now invoke our API by including the access token\
        \ in the HTTP header.<h3 style=\"font-size:120%;\">HTTP Header Parameters</h3>\
        \ <hr><br>Parameters <span style=\"display:inline-block; width: 30%;\"></span>\
        \  Description <hr>   Authorization <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Set to  Only bearer < access token>.<br> Content-Type <span\
        \ style=\"display:inline-block; width: 25%;\"></span>  Only application/json\
        \ <h3 style=\"font-size:120%;\"> HTTP POST Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \ <br>\nMember <span style=\"display:inline-block; width: 25%;\"></span>member\
        \ whose work details are to be added <br>\nPF number <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Add the unique identifier of the employee<br>\nWork\
        \ station<span style=\"display:inline-block; width: 25%;\"></span> Add the\
        \ account<br>\nOfficial designation <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Add their professional designation<br>\nTerms <span style=\"\
        display:inline-block; width: 25%;\"></span>  Add terms of employment<br>\n\
        Employer <span style=\"display:inline-block; width: 30%;\"></span> Add the\
        \ name of employer<br> \nDate of employment<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add the date of employment<br>\nContract expiry date<span\
        \ style=\"display:inline-block; width: 25%;\"></span> Add the date for contarct\
        \ expiry<br>\nBasic salary<span style=\"display:inline-block; width: 25%;\"\
        ></span> Add the basic salary of the member<br>\nGross_salary<span style=\"\
        display:inline-block; width: 25%;\"></span>Add the gross salary of the member<br>\n\
        Non current income<span style=\"display:inline-block; width: 25%;\"></span>\
        \ Add if the meber has non current income<br>\nNet salary<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add the net salary of the member<br>"
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Work_details'
      responses:
        default:
          description: successful operation
  /registration/social_economics/:
    post:
      tags:
      - Registration
      summary: Social economics
      description: "This posts the bio data of a member.With an OAuth 2.0 Access Token,\
        \ an application can now invoke our API by including the access token in the\
        \ HTTP header.<h3 style=\"font-size:120%;\">HTTP Header Parameters</h3> <hr><br>Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \   Authorization <span style=\"display:inline-block; width: 25%;\"></span>\
        \ Set to  Only bearer < access token>.<br> Content-Type <span style=\"display:inline-block;\
        \ width: 25%;\"></span>  Only application/json <h3 style=\"font-size:120%;\"\
        > HTTP POST Parameters</h3> <hr> Parameters <span style=\"display:inline-block;\
        \ width: 30%;\"></span>  Description <hr> <br>\nMember <span style=\"display:inline-block;\
        \ width: 25%;\"></span>member whose details are to be added <br>\nMarital\
        \ status<span style=\"display:inline-block; width: 25%;\"></span> Add their\
        \ marital status<br>\nReligion<span style=\"display:inline-block; width: 25%;\"\
        ></span> Add the members religion<br>\nNo of children<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add no of children<br>\nProfession <span style=\"\
        display:inline-block; width: 25%;\"></span> Add his profession<br>\nEducation\
        \ level<span style=\"display:inline-block; width: 30%;\"></span> Add their\
        \ education level<br> \nCan access credit<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add yes or no<br>\nNo of dependents<span style=\"\
        display:inline-block; width: 25%;\"></span>Add number of dependents<br>\n\
        Branch<span style=\"display:inline-block; width: 25%;\"></span> Add yes or\
        \ no<br>\nRead and write<span style=\"display:inline-block; width: 25%;\"\
        ></span>Add yes or no<br>\nEmployer<span style=\"display:inline-block; width:\
        \ 25%;\"></span> Add employer name<br>\nHousing<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add a yes or no<br>\nSpeak English<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add yes or no<br>\nOther languages<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add other languages used by the member<br>\nEmployment<span\
        \ style=\"display:inline-block; width: 25%;\"></span> Add yes or no<br>\n\
        Is a group member<span style=\"display:inline-block; width: 25%;\"></span>\
        \ Add yes or no<br>\nCan guarantee<span style=\"display:inline-block; width:\
        \ 25%;\"></span> Add yes or no<br>"
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/social_economics'
      responses:
        default:
          description: successful operation
  /registration/member_uploads/:
    post:
      tags:
      - Registration
      summary: Member uploads
      description: |-
        This uploads the member documents.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Member <span style="display:inline-block; width: 25%;"></span>member whose documents are to be added <br>
        Document_type <span style="display:inline-block; width: 25%;"></span>  Add the document type<br>
        Loan<span style="display:inline-block; width: 25%;"></span> Add the loan <br>
        Document name <span style="display:inline-block; width: 25%;"></span> Add the document name<br>
        Document Id <span style="display:inline-block; width: 25%;"></span> Add the document Id <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/member_uploads'
      responses:
        default:
          description: successful operation
  /registration/non_member_registration/:
    post:
      tags:
      - Registration
      summary: Non member registration
      description: "This is a section to register non members.With an OAuth 2.0 Access\
        \ Token, an application can now invoke our API by including the access token\
        \ in the HTTP header.<h3 style=\"font-size:120%;\">HTTP Header Parameters</h3>\
        \ <hr><br>Parameters <span style=\"display:inline-block; width: 30%;\"></span>\
        \  Description <hr>   Authorization <span style=\"display:inline-block; width:\
        \ 25%;\"></span> Set to  Only bearer < access token>.<br> Content-Type <span\
        \ style=\"display:inline-block; width: 25%;\"></span>  Only application/json\
        \ <h3 style=\"font-size:120%;\"> HTTP POST Parameters</h3> <hr> Parameters\
        \ <span style=\"display:inline-block; width: 30%;\"></span>  Description <hr>\
        \ <br>\nFirst name <span style=\"display:inline-block; width: 25%;\"></span>Add\
        \ their first name <br>\nMiddle name <span style=\"display:inline-block; width:\
        \ 25%;\"></span>  Add the their middle name<br>\nLast name<span style=\"display:inline-block;\
        \ width: 25%;\"></span> Add their last name <br>\nPhone number <span style=\"\
        display:inline-block; width: 25%;\"></span> Add a phone number<br>\nId number\
        \ <span style=\"display:inline-block; width: 25%;\"></span>Add the Id number<br>\
        \  "
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Non_member'
      responses:
        default:
          description: successful operation
  /registration/non_member_registration/{id}:
    get:
      tags:
      - Registration
      summary: Non member registration
      description: |-
        Get the non the non member registered.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Id <span style="display:inline-block; width: 25%;"></span>Add the Id of the member <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - name: id
        in: path
        description: ""
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /registration/member_accounts/{id}/:
    get:
      tags:
      - Registration
      summary: View member accounts
      description: |-
        View member accounts.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Id <span style="display:inline-block; width: 25%;"></span>Add the Id of the member <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - name: id
        in: path
        description: ""
        required: true
        type: string
      responses:
        default:
          description: successful operation
  /registration/chart_accounts/:
    post:
      tags:
      - Registration
      summary: Accounts Registration
      description: |-
        This section is for account registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Account type <span style="display:inline-block; width: 25%;"></span>Add the account type being registered <br>
        Account name<span style="display:inline-block; width: 25%;"></span>  Add the account name<br>
        Gl code<span style="display:inline-block; width: 25%;"></span> Add the gl code<br>
        Manual entries allowed <span style="display:inline-block; width: 25%;"></span> Add if the manual entries are allowed<br>
        Overdraft allowed <span style="display:inline-block; width: 25%;"></span> Add if overdraft is allowed or not<br>
        Parent <span style="display:inline-block; width: 25%;"></span> Add the parent account <br>
        Appears on group performance <span style="display:inline-block; width: 10%;"></span> Add if the account should appear on group performance or not <br>
        Description <span style="display:inline-block; width: 25%;"></span> Add the account description<br>
        Account usage<span style="display:inline-block; width: 25%;"></span> Add the usage of the account <br>
        Gl group<span style="display:inline-block; width: 25%;"></span> Add a gl group if applicable<br>
        Branch<span style="display:inline-block; width: 25%;"></span> Add the branch of the account <br>
        Status<span style="display:inline-block; width: 25%;"></span> Add the status of the  account <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/GL_account'
      responses:
        default:
          description: successful operation
  /registration/banks/:
    post:
      tags:
      - Registration
      summary: Bank Registration
      description: |-
        This section is for bank registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name <span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span>  Add the gl account <br>
        User<span style="display:inline-block; width: 25%;"></span> Add the user <br>
        Business number <span style="display:inline-block; width: 25%;"></span> Add the business number  <br>
        Currency <span style="display:inline-block; width: 25%;"></span> Add the currency to be used  <br>
        Payment type <span style="display:inline-block; width: 25%;"></span> Add the payment e.g cash or cheque  <br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Bank_registration'
      responses:
        default:
          description: successful operation
  /registration/bank_branch/:
    post:
      tags:
      - Registration
      summary: Bank branch Registration
      description: |-
        This for bank branch registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name<span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span> Add the gl account<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Bank_branch'
      responses:
        default:
          description: successful operation
  /registration/group_registration/:
    post:
      tags:
      - Registration
      summary: Bank branch Registration
      description: |-
        This for bank branch registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name<span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span> Add the gl account<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Group_registration'
      responses:
        default:
          description: successful operation
  /registration/payment_modes/:
    post:
      tags:
      - Registration
      summary: Payment mode registration
      description: |-
        This for bank branch registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name<span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span> Add the gl account<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Payment_registration'
      responses:
        default:
          description: successful operation
  /registration/currency/:
    post:
      tags:
      - Registration
      summary: Currency registration
      description: |-
        This for bank branch registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name<span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span> Add the gl account<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Currency'
      responses:
        default:
          description: successful operation
  /registration/agents/:
    post:
      tags:
      - Registration
      summary: Agents registration
      description: |-
        This for bank branch registration.With an OAuth 2.0 Access Token, an application can now invoke our API by including the access token in the HTTP header.<h3 style="font-size:120%;">HTTP Header Parameters</h3> <hr><br>Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr>   Authorization <span style="display:inline-block; width: 25%;"></span> Set to  Only bearer < access token>.<br> Content-Type <span style="display:inline-block; width: 25%;"></span>  Only application/json <h3 style="font-size:120%;"> HTTP POST Parameters</h3> <hr> Parameters <span style="display:inline-block; width: 30%;"></span>  Description <hr> <br>
        Bank name<span style="display:inline-block; width: 25%;"></span>Add the bank name <br>
        Gl account <span style="display:inline-block; width: 25%;"></span> Add the gl account<br>
      produces:
      - application/xml
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: The authorization access token
        required: true
        type: string
      - in: body
        name: data
        description: List of user object
        required: true
        schema:
          $ref: '#/definitions/Agent_registration'
      responses:
        default:
          description: successful operation
definitions:
  loan:
    type: object
    properties:
      member:
        type: string
      loan_reference_no:
        type: string
      loan_type:
        type: string
      amount:
        type: integer
      loan_purpose:
        type: string
      no_of_repayments:
        type: integer
      Grace period:
        type: integer
      date_of_loan_application:
        type: string
      days_before_first_repayment:
        type: string
      interest rate:
        type: integer
      repaid_on:
        type: string
      charges:
        type: string
      date_of_first_repayment:
        type: string
      loan_top_up:
        type: string
    xml:
      name: loan
  Product:
    type: object
    properties:
      product_name:
        type: string
      short_name:
        type: string
      description:
        type: string
      product_type:
        type: integer
      target_group:
        type: string
      mode_of_payment:
        type: string
      estimated_appraisal_period:
        type: string
      start_date:
        type: string
      close_date:
        type: string
      loan_fund:
        type: string
      status:
        type: string
      minimum_days_disbursement_repayment:
        type: string
      minimum_principal:
        type: string
      maximum_principal:
        type: integer
      minimum_repayments:
        type: string
      maximum_repayments:
        type: integer
      minimum_interest_rate:
        type: integer
      maximum_interest_rate:
        type: string
      default_interest_rate:
        type: string
      interest_charged_per:
        type: integer
      repaid_every:
        type: string
      repayment_interval:
        type: string
      interest_method:
        type: integer
      days_overdue_before_arreas:
        type: string
      days_overdue_before_npa:
        type: string
      minimum_guarantors:
        type: string
      maximum_guarantors:
        type: integer
      place_guarantor_funds_hold:
        type: string
      enable_multiple_disbursals:
        type: integer
      amortization:
        type: integer
      gl_account:
        type: string
      interest_account:
        type: string
      overpayment_account:
        type: integer
      losses_from_write_off:
        type: string
      loan_approvals:
        type: integer
      allowed_loan_approvals:
        type: string
      is_group_loan:
        type: string
      recalculate_loan_advance_payment:
        type: string
      realtime_interest:
        type: integer
      realtime_penalties:
        type: string
      publish_to_marketplace:
        type: integer
      total_interest_calculation_method:
        type: integer
      calculate_repayment_ability_from_salary:
        type: string
      no_of_decimal_places:
        type: string
      disbursement_mode:
        type: integer
      instant_disbursement:
        type: string
      members_only:
        type: integer
      maximum_number_of_concurrent_loans:
        type: string
      default_repayment_product:
        type: integer
      recalculate_loan_on_repayment:
        type: integer
      interest_posting_method:
        type: string
    xml:
      name: Product
    example:
      close_date: close_date
      days_overdue_before_arreas: days_overdue_before_arreas
      realtime_penalties: realtime_penalties
      repayment_interval: repayment_interval
      default_repayment_product: 7
      publish_to_marketplace: 1
      estimated_appraisal_period: estimated_appraisal_period
      no_of_decimal_places: no_of_decimal_places
      maximum_repayments: 1
      enable_multiple_disbursals: 9
      interest_method: 2
      gl_account: gl_account
      interest_account: interest_account
      realtime_interest: 7
      disbursement_mode: 1
      default_interest_rate: default_interest_rate
      maximum_guarantors: 7
      recalculate_loan_advance_payment: recalculate_loan_advance_payment
      instant_disbursement: instant_disbursement
      allowed_loan_approvals: allowed_loan_approvals
      product_name: product_name
      calculate_repayment_ability_from_salary: calculate_repayment_ability_from_salary
      is_group_loan: is_group_loan
      recalculate_loan_on_repayment: 1
      interest_charged_per: 5
      short_name: short_name
      mode_of_payment: mode_of_payment
      loan_approvals: 4
      minimum_principal: minimum_principal
      status: status
      repaid_every: repaid_every
      description: description
      maximum_number_of_concurrent_loans: maximum_number_of_concurrent_loans
      amortization: 3
      maximum_principal: 6
      total_interest_calculation_method: 1
      members_only: 6
      minimum_repayments: minimum_repayments
      target_group: target_group
      maximum_interest_rate: maximum_interest_rate
      place_guarantor_funds_hold: place_guarantor_funds_hold
      start_date: start_date
      losses_from_write_off: losses_from_write_off
      minimum_guarantors: minimum_guarantors
      interest_posting_method: interest_posting_method
      loan_fund: loan_fund
      product_type: 0
      minimum_interest_rate: 5
      days_overdue_before_npa: days_overdue_before_npa
      minimum_days_disbursement_repayment: minimum_days_disbursement_repayment
      overpayment_account: 2
  Guarantors:
    type: object
    properties:
      member_type:
        type: string
      member:
        type: string
      collateral_or_savings:
        type: string
      savings_amount:
        type: integer
      loan:
        type: string
      member_id[]:
        type: string
    xml:
      name: Guarantors
  Collateral:
    type: object
    properties:
      member_type:
        type: string
      member:
        type: string
      description:
        type: string
      collateral_id_no:
        type: integer
      value:
        type: string
      status:
        type: string
      collateral_type:
        type: string
      comment:
        type: string
    xml:
      name: Collateral
    example:
      member_type: member_type
      collateral_id_no: 0
      member: member
      collateral_type: collateral_type
      description: description
      comment: comment
      value: value
      status: status
  Charges:
    type: object
    properties:
      name:
        type: string
      charge_time_type:
        type: string
      charge_calculation:
        type: string
      formula:
        type: integer
      calculation_amount_from:
        type: string
      calculation_amount_to:
        type: string
      amount:
        type: string
      gl_account:
        type: string
      use_as:
        type: string
      status:
        type: string
    xml:
      name: Charges
    example:
      use_as: use_as
      amount: amount
      charge_time_type: charge_time_type
      charge_calculation: charge_calculation
      calculation_amount_to: calculation_amount_to
      name: name
      formula: 0
      calculation_amount_from: calculation_amount_from
      gl_account: gl_account
      status: status
  Formulas:
    type: object
    properties:
      name:
        type: string
      formula_array:
        type: string
    xml:
      name: Formulas
    example:
      formula_array: formula_array
      name: name
  Registration:
    type: object
    properties:
      first_name:
        type: string
      middle_name:
        type: string
      last_name:
        type: string
      date_of_birth:
        type: string
      id_no:
        type: string
      cro:
        type: string
      member_no:
        type: string
      country:
        type: string
      registration_date:
        type: string
      status:
        type: string
      gender:
        type: string
      mobile_no:
        type: string
      member_type:
        type: string
    xml:
      name: Registration
    example:
      member_type: member_type
      cro: cro
      country: country
      gender: gender
      date_of_birth: date_of_birth
      member_no: member_no
      mobile_no: mobile_no
      last_name: last_name
      middle_name: middle_name
      id_no: id_no
      registration_date: registration_date
      first_name: first_name
      status: status
  Bank:
    type: object
    properties:
      member:
        type: string
      bank:
        type: string
      branch:
        type: string
      branch_name:
        type: string
      account_type:
        type: string
      account_number:
        type: string
    xml:
      name: Bank
    example:
      account_number: account_number
      bank: bank
      account_type: account_type
      branch_name: branch_name
      member: member
      branch: branch
  Next_of_kin:
    type: object
    properties:
      member:
        type: string
      first_name:
        type: string
      middle_name:
        type: string
      last_name:
        type: string
      relationship:
        type: string
      percentage:
        type: string
      date_of_birth:
        type: string
      id_no:
        type: string
      comment:
        type: string
    xml:
      name: Next_of_kin
    example:
      id_no: id_no
      date_of_birth: date_of_birth
      percentage: percentage
      member: member
      last_name: last_name
      comment: comment
      middle_name: middle_name
      relationship: relationship
      first_name: first_name
  Member_group:
    type: object
    properties:
      member:
        type: string
      group_name:
        type: string
      is_member_signatory:
        type: string
    xml:
      name: Member_group
    example:
      is_member_signatory: is_member_signatory
      group_name: group_name
      member: member
  Member_accounts:
    type: object
    properties:
      group:
        type: string
      member:
        type: string
      account:
        type: string
      account_number:
        type: string
      account_name:
        type: string
      charge_registration_fees:
        type: string
      opening_date:
        type: string
      enable_account_signatories:
        type: string
    xml:
      name: Member_accounts
    example:
      account_number: account_number
      charge_registration_fees: charge_registration_fees
      enable_account_signatories: enable_account_signatories
      account_name: account_name
      member: member
      account: account
      opening_date: opening_date
      group: group
  Work_details:
    type: object
    properties:
      member:
        type: string
      pf_number:
        type: string
      work_station:
        type: string
      official_designation:
        type: string
      terms:
        type: string
      employer:
        type: string
      date_of_employment:
        type: string
      contract_expiry_date:
        type: string
      basic_salary:
        type: string
      gross_salary:
        type: string
      non_current_income:
        type: string
      net_salary:
        type: string
    xml:
      name: Work_details
    example:
      work_station: work_station
      gross_salary: gross_salary
      net_salary: net_salary
      pf_number: pf_number
      terms: terms
      member: member
      official_designation: official_designation
      basic_salary: basic_salary
      employer: employer
      contract_expiry_date: contract_expiry_date
      non_current_income: non_current_income
      date_of_employment: date_of_employment
  social_economics:
    type: object
    properties:
      member:
        type: string
      marital_status:
        type: string
      religion:
        type: string
      no_of_children:
        type: string
      profession:
        type: string
      education_level:
        type: string
      can_access_credit:
        type: string
      no_of_dependants:
        type: string
      branch:
        type: string
      read_and_write:
        type: string
      employer:
        type: string
      housing:
        type: string
      speak_english:
        type: string
      other_languages:
        type: string
      employment:
        type: string
      is_a_group_member:
        type: string
      can_guarantee:
        type: string
    xml:
      name: social_economics
  member_uploads:
    type: object
    properties:
      member:
        type: string
      document_type:
        type: string
      loan:
        type: string
      document_name:
        type: string
      document_id:
        type: string
    xml:
      name: member_uploads
  Non_member:
    type: object
    properties:
      first_name:
        type: string
      middle_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      id_number:
        type: string
    xml:
      name: Non_member
    example:
      id_number: id_number
      last_name: last_name
      phone_number: phone_number
      middle_name: middle_name
      first_name: first_name
  GL_account:
    type: object
    properties:
      account_type:
        type: string
      account_name:
        type: string
      gl_code:
        type: string
      manual_entries_allowed:
        type: string
      overdraft_allowed:
        type: string
      parent:
        type: string
      appears_on_group_performance:
        type: string
      description:
        type: string
      account_usage:
        type: string
      gl_group:
        type: string
      branch:
        type: string
      status:
        type: string
    xml:
      name: GL_account
    example:
      account_usage: account_usage
      gl_code: gl_code
      parent: parent
      account_type: account_type
      gl_group: gl_group
      appears_on_group_performance: appears_on_group_performance
      account_name: account_name
      description: description
      manual_entries_allowed: manual_entries_allowed
      overdraft_allowed: overdraft_allowed
      branch: branch
      status: status
  Bank_registration:
    type: object
    properties:
      bank_name:
        type: string
      gl_account:
        type: string
      user:
        type: string
      business_number:
        type: string
      currency:
        type: string
      payment_type:
        type: string
    xml:
      name: Bank_registration
    example:
      payment_type: payment_type
      bank_name: bank_name
      business_number: business_number
      currency: currency
      gl_account: gl_account
      user: user
  Bank_branch:
    type: object
    properties:
      bank_name:
        type: string
      gl_account:
        type: string
    xml:
      name: Bank_branch
    example:
      bank_name: bank_name
      gl_account: gl_account
  Group_registration:
    type: object
    properties:
      group_code:
        type: string
      group_name:
        type: string
      physical_address:
        type: string
      county:
        type: string
      constituency:
        type: string
      meeting_time:
        type: string
      postal_address:
        type: string
    xml:
      name: Group_registration
    example:
      physical_address: physical_address
      postal_address: postal_address
      group_code: group_code
      constituency: constituency
      group_name: group_name
      meeting_time: meeting_time
      county: county
  Payment_registration:
    type: object
    properties:
      name:
        type: string
      is_cash_payment:
        type: string
      payment_gateway:
        type: string
      description:
        type: string
    xml:
      name: Payment_registration
    example:
      payment_gateway: payment_gateway
      name: name
      description: description
      is_cash_payment: is_cash_payment
  Currency:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
    xml:
      name: Currency
    example:
      code: code
      name: name
  Agent_registration:
    type: object
    properties:
      first_name:
        type: string
      middle_name:
        type: string
      last_name:
        type: string
      id_number:
        type: string
      personal_email:
        type: string
      phone_number:
        type: string
      bank_name:
        type: string
      bank_account_name:
        type: string
      bank_account_no:
        type: string
    xml:
      name: Agent_registration
    example:
      bank_account_name: bank_account_name
      id_number: id_number
      bank_account_no: bank_account_no
      bank_name: bank_name
      last_name: last_name
      phone_number: phone_number
      middle_name: middle_name
      first_name: first_name
      personal_email: personal_email
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
